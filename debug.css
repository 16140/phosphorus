html, body {
  height: 100%;
  margin: 0;
}

body {
  display: flex;
  -webkit-user-select: none;
  cursor: default;
  overflow: hidden;
}

.stage-pane {
  width: 480px;
  display: flex;
  flex-direction: column;
}
.sprite-list {
  flex: 1;
}

.script-pane {
  flex: 1;
  position: relative;
  overflow: auto;
  background: radial-gradient(circle 1.5px at 11.5px 1.5px, rgb(213, 214, 214) 1px, transparent 1.25px), radial-gradient(circle 1.5px at 1.5px 11.5px, rgb(213, 214, 214) 1px, transparent 1.25px), rgb(221, 222, 222);
  background-size: 23px 23px;
}
.debug-pane {
  width: 240px;
}

/* borders */
.stage-pane, .script-pane {
  border-right: 1px solid #ddd;
}
.player, .controls {
  border-bottom: 1px solid #ddd;
}
body {
  background: #f5f5f5;
}

/* scripts */
.block-test {
  position: absolute;
  top: 0;
  left: 0;
}
.script {
  position: absolute;
  white-space: nowrap;
  padding-right: 10px;
  padding-bottom: 10px;
  z-index: 1;
  width: 0;
}
.script.inline {
  position: relative;
  min-height: 9px;
  padding-top: 4px;
  padding-left: 15px;
  margin-left: -5px;
  padding-bottom: 16px;
  margin-bottom: -4px;
  padding-right: 0;
  z-index: auto;
}
.script::after {
  content: '';
  clear: both;
  display: block;
}

.block {
  position: relative;
  box-sizing: border-box;
  line-height: 1px;
  pointer-events: none;
}
/*.block:hover,
.arg:hover {
  outline: 4px solid rgba(0, 0, 0, .6);
  z-index: 100;
}*/
.block.command,
.block.hat,
.block.proc-hat {
  float: left;
  clear: both;
  padding: 5px 5px 4px;
  min-width: 42px;
}
.block.hat {
  padding: 14px 5px 4px;
  min-width: 82px;
}
.block.proc-hat {
  padding: 27px 5px 4px;
}
.block.reporter {
  padding: 3px 6px;
}
.block.c-block {
  min-width: 83px;
}
.block > canvas {
  position: absolute;
  top: 0;
  left: 0;
}
.block.arg {
  margin-top: -1px;
  margin-bottom: -1px;
  pointer-events: none;
}
.parts {
  position: relative;
  margin: -5px -5px -4px;
  padding: 5px 5px 4px;
}
.block.boolean {
  display: inline-table;
  position: relative;
}
.boolean-parts {
  display: table-cell;
  position: relative;
  padding: 3px 0;
}

.fill {
  position: absolute;
  pointer-events: auto;
}
.fill.puzzle-top {
  top: 0;
  left: 13px;
  width: 14px;
  height: 3px;
  background: #f5f5f5 !important;
  border-radius: 0 0 3px 3px;
  z-index: 1;
  box-shadow:
    1px 1px 1px rgba(255, 255, 255, .3);
}
.fill.puzzle-bottom,
.fill.puzzle-inner,
.fill.puzzle-inner2 {
  top: 100%;
  margin-top: -2px;
  left: 13px;
  width: 14px;
  height: 5px;
  border-radius: 0 0 3px 3px;
  z-index: 2;
  box-shadow:
    inset -1px -3px 1px -2px rgba(0, 0, 0, .4);
}
.fill.puzzle-inner,
.fill.puzzle-inner2 {
  left: 28px;
}
.fill.command-body,
.fill.reporter-body,
.fill.boolean-body,
.fill.top,
.fill.bottom,
.fill.hat-body,
.fill.proc-hat-body {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
.fill.command-body,
.fill.top,
.fill.bottom,
.fill.hat-body,
.fill.proc-hat-body,
.fill.else {
  border-radius: 4px;
  box-shadow:
    inset 1px 1px 1px rgba(255, 255, 255, .3),
    inset -1px -1px 1px rgba(0, 0, 0, .4);
}
.fill.hat-body {
  border-radius: 0 3px 3px 3px;
  top: 10px;
}
.fill.proc-hat-body {
  border-radius: 0 3px 3px 3px;
  top: 22px;
}
.fill.hat {
  top: 0;
  left: 0;
  width: 82px;
  height: 12px;
  border-radius: 41px 41px 0 0/12px 12px 0 0;
  box-shadow:
    inset 1px 1px 1px rgba(255, 255, 255, .3);
  z-index: 1;
}
.fill.proc-hat {
  top: 4px;
  left: 0;
  right: 0;
  height: 20px;
  border-radius: 50% 50% 0 0/18px 18px 0 0;
  box-shadow:
    inset 21px 0 1px -20px rgba(255, 255, 255, .3),
    0 -1px rgb(117, 40, 180),
    0 -2px rgb(143, 47, 204),
    0 -3px rgb(131, 64, 188),
    0 -4px rgb(170, 146, 198);
  z-index: 1;
}
.fill.top {
  border-bottom-left-radius: 0;
}
.fill.bottom {
  top: auto;
  border-top-left-radius: 0;
  height: 16px;
}
.fill.bottom.loop::before {
  position: absolute;
  right: 2px;
  bottom: 3px;
  content: url(debug/loop.png);
}
.fill.left,
.fill.left2 {
  top: 2px;
  left: 0;
  width: 15px;
  bottom: 14px;
  box-shadow:
    inset 2px 0 1px -1px rgba(255, 255, 255, .3),
    inset -2px 0 1px -1px rgba(0, 0, 0, .4);
  z-index: 1;
}
.fill.else {
  position: relative;
  margin: -16px -5px -4px;
  padding: 2px 5px 3px;
  border-radius: 0 3px 3px 0;
}
.fill.reporter-body {
  border-radius: 1000px;
  box-shadow:
    inset 1px 1px 1px rgba(255, 255, 255, .3),
    inset -1px -1px 1px rgba(0, 0, 0, .4);
}
.fill.boolean-body {
  box-shadow:
    inset 0 2px 1px -1px rgba(255, 255, 255, .3),
    inset 0 -2px 1px -1px rgba(0, 0, 0, .4);
}
.boolean-left,
.boolean-right {
  display: table-cell;
  position: relative;
  overflow: hidden;
  line-height: 1px;
  pointer-events: none;
}
.boolean-left::before,
.boolean-right::before {
  content: url(debug/empty.png);
  margin-right: -1px;
  display: inline-block;
}
.boolean-square {
  display: block;
  height: 50%;
  pointer-events: none;
}
.boolean-angle {
  position: absolute;
  bottom: 50%;
  left: 0;
  -webkit-transform-origin: left bottom;
  -webkit-transform: rotate(45deg);
  width: 200%;
  height: 100%;
  background: rgb(92, 183, 18);
  box-shadow:
    inset 2px 0 1px -1px rgba(255, 255, 255, .3);
  pointer-events: auto;
}
.boolean-right > .boolean-angle {
  right: 0;
  left: auto;
  -webkit-transform-origin: right bottom;
  -webkit-transform: rotate(-45deg);
  box-shadow:
    inset 0 -2px 1px -1px rgba(0, 0, 0, .4);
}

.label, .arg, .icon {
  margin-left: 3px;
  vertical-align: middle;
  display: inline-block;
  position: relative;
  z-index: 3;
}
.label:first-child, .arg:first-child {
  margin-left: 0;
}

.label {
  font: 600 11px/13px sans-serif;
  color: #fff;
  padding: 0 1px;
}

.icon-turnLeft,
.icon-turnRight {
  background: url(debug/turnLeftIcon.png);
  background-size: 15px 15px;
  width: 15px;
  height: 15px;
}
.icon-turnRight {
  background-image: url(debug/turnRightIcon.png);
}
.icon-greenFlag {
  background: url(debug/flagIcon.png);
  background-size: 23px 23px;
  width: 23px;
  height: 23px;
  margin-top: -3px;
  margin-bottom: -2px;
}

.arg {
  font: 10px/9px sans-serif;
  pointer-events: auto;
}
.arg.number {
  background: #fff;
  padding: 3px 3px 1px 5px;
  margin-bottom: 1px;
  height: 9px;
  border-radius: 7px;
  min-width: 5px;
  box-shadow:
    inset 1px 1px 1px rgba(127, 127, 127, .6),
    0 -1px 1px rgba(127, 127, 127, .6),
    0 1px rgba(255, 255, 255, .5);
  color: rgba(0, 0, 0, .7);
}
.arg.string {
  background: #fff;
  padding: 3px 3px 1px 5px;
  margin-bottom: 1px;
  height: 9px;
  min-width: 5px;
  box-shadow:
    inset 1px 1px 1px rgba(127, 127, 127, .6),
    0 -1px 1px rgba(127, 127, 127, .6),
    0 1px rgba(255, 255, 255, .5);
  color: rgba(0, 0, 0, .7);
}
.arg.enum {
  background: rgba(0, 0, 0, .1);
  color: #fff;
  padding: 3px 4px 4px;
  margin-top: -1px;
  margin-bottom: -1px;
}
.arg.enum, .arg.color {
  box-shadow:
    inset -1px -1px 1px rgba(255, 255, 255, .3),
    inset 1px 1px 1px rgba(0, 0, 0, .4);
}
.arg.menu::after {
  content: '';
  display: inline-block;
  border-top: 4px solid #000;
  border-left: 3px solid transparent;
  border-right: 3px solid transparent;
  vertical-align: middle;
  margin-left: 6px;
}
.arg.number.menu::after {
  margin-left: 1px;
  margin-bottom: 3px;
}
.arg.color {
  width: 13px;
  height: 13px;
}
.arg.proc {
  padding: 4px 4px 3px;
  border: 2px solid rgba(255, 255, 255, .25);
  margin-bottom: 5px;
  border-radius: 4px;
  pointer-events: none;
}
.proc-fill.puzzle-top {
  position: absolute;
  border: 2px solid rgba(255, 255, 255, .25);
  border-top: 0;
  border-radius: 0 0 4px 4px;
  top: -2px;
  left: 11px;
  width: 12px;
  height: 3px;
}
.proc-fill.puzzle-bottom {
  position: absolute;
  border: 2px solid rgba(255, 255, 255, .25);
  border-top: 0;
  border-radius: 0 0 4px 4px;
  top: 100%;
  left: 11px;
  width: 12px;
  height: 3px;
}
.arg.bool {
  width: 30px;
  pointer-events: none;
}
.arg.bool > .boolean-parts {
  width: 14px;
  height: 14px;
  padding: 0;
}
.arg.bool .fill.boolean-body {
  pointer-events: none;
  background: rgba(0, 0, 0, .1);
  box-shadow:
    inset 0 -2px 1px -1px rgba(255, 255, 255, .3),
    inset 0 2px 1px -1px rgba(0, 0, 0, .4);
}
.arg.bool .boolean-left,
.arg.bool .boolean-right {
  width: 8px;
}
.arg.bool .boolean-angle {
  pointer-events: none;
  background: rgba(0, 0, 0, .1);
  box-shadow:
    inset 2px 0 1px -1px rgba(0, 0, 0, .4);
}
.arg.bool .boolean-right .boolean-angle {
  box-shadow:
    inset -1px 0 1px -1px rgba(0, 0, 0, .4),
    inset 0 -2px 1px -1px rgba(255, 255, 255, .3);
}
